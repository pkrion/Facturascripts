{% block body %}
<div class="container-fluid">
    <div class="row bg-light p-2 mb-3 border rounded align-items-end g-2">
        <div class="col">
            <input type="text" id="dir_search_query" class="form-control" placeholder="Buscar cliente...">
        </div>
    </div>
    <div id="crm-grid" class="ag-theme-alpine" style="width:100%; height: 600px;"></div>
</div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function () {
    const columnDefs = [
        { headerName: "Nombre", field: "nombre", flex: 2 },
        { headerName: "CIF/NIF", field: "cifnif", flex: 1 },
        { headerName: "Email", field: "email", flex: 2 },
        { headerName: "Teléfono", field: "telefono", flex: 1 },
        { headerName: "Stack Tecnológico", field: "stack_tecnologico", flex: 2 },
        { headerName: "Competidores", field: "competidores", flex: 2 },
        {
            headerName: "Presupuesto Marketing",
            field: "presupuesto_marketing",
            type: "numericColumn",
            flex: 1,
            valueFormatter: params => new Intl.NumberFormat('es-ES', { style: 'currency', currency: 'EUR' }).format(params.value || 0)
        },
        { headerName: "Fuente Lead", field: "fuente_lead", flex: 1 },
        { headerName: "Oportunidades", field: "num_oportunidades", type: "numericColumn", flex: 1 },
        {
            headerName: "Valor Oportunidades",
            field: "valor_oportunidades",
            type: "numericColumn",
            flex: 1,
            valueFormatter: params => new Intl.NumberFormat('es-ES', { style: 'currency', currency: 'EUR' }).format(params.value || 0)
        },
    ];

    const gridOptions = {
        columnDefs,
        rowData: {{ fsc.clientes|json_encode(constant('JSON_UNESCAPED_UNICODE'))|raw }},
        animateRows: true,
        // La propiedad 'height' en el div y 'domLayout' aquí pueden coexistir.
        // 'autoHeight' hará que la rejilla crezca para mostrar todas las filas,
        // y el 'height' del div actuará como un contenedor. Para un número
        // muy grande de filas, es mejor quitar 'autoHeight' y dejar que el
        // scroll de la rejilla funcione dentro de los 600px.
        domLayout: 'autoHeight',
        defaultColDef: {
            resizable: true,
            sortable: true,
            filter: true,
        }
    };

    // Inicializamos la rejilla. Después de esta línea, gridOptions.api estará disponible.
    agGrid.createGrid(document.getElementById('crm-grid'), gridOptions);

    // Adjuntamos el listener para el filtro rápido.
    document.getElementById('dir_search_query').addEventListener('input', function() {
        // Usamos gridOptions.api para acceder a la API de forma segura.
        if (gridOptions.api) {
            gridOptions.api.setQuickFilter(this.value);
        }
    });
});
</script>
{% endblock %}